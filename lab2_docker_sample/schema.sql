DROP DATABASE IF EXISTS lab2;

CREATE ROLE testuser LOGIN;

--For linux
CREATE DATABASE lab2 ENCODING 'UTF-8' LC_COLLATE 'en_US.UTF-8' LC_CTYPE 'en_US.UTF-8' TEMPLATE template0 OWNER testuser;

\c lab2

SET ROLE testuser;

-- Table: Chats
-- DROP TABLE IF EXISTS "Chats";
CREATE TABLE IF NOT EXISTS "Chats"
(
    "Id" bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    "Title" text COLLATE pg_catalog."default",
    "PhotoUrl" text COLLATE pg_catalog."default",
    "IsUsed" boolean,
    "AddedBy" text COLLATE pg_catalog."default" NOT NULL,
    "AddedDate" timestamp without time zone NOT NULL,
    "LastModifiedBy" text COLLATE pg_catalog."default",
    "LastModifiedDate" timestamp without time zone,
    CONSTRAINT "PK_Chats" PRIMARY KEY ("Id")
);

-- Table: public.Messages
-- DROP TABLE IF EXISTS "Messages";
CREATE TABLE IF NOT EXISTS "Messages"
(
    "GroupId" bigint NOT NULL,
    "MessageId" integer NOT NULL,
    "Text" text COLLATE pg_catalog."default",
    "CreatedDate" timestamp without time zone NOT NULL,
    "EditedDate" timestamp without time zone,
    "AddedBy" text COLLATE pg_catalog."default" NOT NULL,
    "AddedDate" timestamp without time zone NOT NULL,
    "LastModifiedBy" text COLLATE pg_catalog."default",
    "LastModifiedDate" timestamp without time zone,
    "PeerId" bigint NOT NULL DEFAULT 0,
    CONSTRAINT "PK_Messages" PRIMARY KEY ("PeerId", "MessageId"),
    CONSTRAINT "FK_Messages_Chats_PeerId" FOREIGN KEY ("PeerId")
        REFERENCES public."Chats" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

-- Table: MessageDetails
-- DROP TABLE IF EXISTS "MessageDetails";
CREATE TABLE IF NOT EXISTS "MessageDetails"
(
    "MessagePeerId" bigint NOT NULL,
    "MessageMessageId" integer NOT NULL,
    "Language" text COLLATE pg_catalog."default",
    "Sentiment" text COLLATE pg_catalog."default",
    "AddedBy" text COLLATE pg_catalog."default" NOT NULL,
    "AddedDate" timestamp without time zone NOT NULL,
    "LastModifiedBy" text COLLATE pg_catalog."default",
    "LastModifiedDate" timestamp without time zone,
    CONSTRAINT "PK_MessageDetails" PRIMARY KEY ("MessagePeerId", "MessageMessageId"),
    CONSTRAINT "FK_MessageDetails_Messages_MessagePeerId_MessageMessageId" FOREIGN KEY ("MessageMessageId", "MessagePeerId")
        REFERENCES public."Messages" ("MessageId", "PeerId") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);

-- Table: KeyPhrases
-- DROP TABLE IF EXISTS "KeyPhrases";
CREATE TABLE IF NOT EXISTS "KeyPhrases"
(
    "Value" text COLLATE pg_catalog."default" NOT NULL,
    "AddedBy" text COLLATE pg_catalog."default" NOT NULL,
    "AddedDate" timestamp without time zone NOT NULL,
    "LastModifiedBy" text COLLATE pg_catalog."default",
    "LastModifiedDate" timestamp without time zone,
    "Id" uuid NOT NULL DEFAULT '062e53e3-520c-48ac-8209-190649ad29e9'::uuid,
    CONSTRAINT "PK_KeyPhrases" PRIMARY KEY ("Id")
);

-- Table: public.MessageKeyPhrases
-- DROP TABLE IF EXISTS "MessageKeyPhrases";
CREATE TABLE IF NOT EXISTS "MessageKeyPhrases"
(
    "MessagesPeerId" bigint NOT NULL,
    "MessagesMessageId" integer NOT NULL,
    "KeyPhrasesId" uuid NOT NULL,
    CONSTRAINT "PK_MessageKeyPhrases" PRIMARY KEY ("KeyPhrasesId", "MessagesPeerId", "MessagesMessageId"),
    CONSTRAINT "FK_MessageKeyPhrases_KeyPhrases_KeyPhrasesId" FOREIGN KEY ("KeyPhrasesId")
        REFERENCES public."KeyPhrases" ("Id") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE,
    CONSTRAINT "FK_MessageKeyPhrases_Messages_MessagesPeerId_MessagesMessageId" FOREIGN KEY ("MessagesMessageId", "MessagesPeerId")
        REFERENCES public."Messages" ("MessageId", "PeerId") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);
-- Index: IX_MessageKeyPhrases_MessagesPeerId_MessagesMessageId
-- DROP INDEX IF EXISTS "IX_MessageKeyPhrases_MessagesPeerId_MessagesMessageId";
CREATE INDEX IF NOT EXISTS "IX_MessageKeyPhrases_MessagesPeerId_MessagesMessageId"
    ON public."MessageKeyPhrases" USING btree
    ("MessagesPeerId" ASC NULLS LAST, "MessagesMessageId" ASC NULLS LAST);

-- Table: Media
-- DROP TABLE IF EXISTS "Media";
CREATE TABLE IF NOT EXISTS "Media"
(
    "MessagePeerId" bigint NOT NULL,
    "MessageMessageId" integer NOT NULL,
    "MessageGroupId" bigint NOT NULL,
    "Name" text COLLATE pg_catalog."default",
    "ContentType" text COLLATE pg_catalog."default",
    "Link" text COLLATE pg_catalog."default",
    "AddedBy" text COLLATE pg_catalog."default" NOT NULL,
    "AddedDate" timestamp without time zone NOT NULL,
    "LastModifiedBy" text COLLATE pg_catalog."default",
    "LastModifiedDate" timestamp without time zone,
    "Id" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000'::uuid,
    CONSTRAINT "PK_Media" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Media_Messages_MessagePeerId_MessageMessageId" FOREIGN KEY ("MessageMessageId", "MessagePeerId")
        REFERENCES public."Messages" ("MessageId", "PeerId") MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE CASCADE
);
-- Index: IX_Media_MessagePeerId_MessageMessageId
-- DROP INDEX IF EXISTS "IX_Media_MessagePeerId_MessageMessageId";
CREATE INDEX IF NOT EXISTS "IX_Media_MessagePeerId_MessageMessageId"
    ON public."Media" USING btree
    ("MessagePeerId" ASC NULLS LAST, "MessageMessageId" ASC NULLS LAST);
